# version: "3.8"
# services:
#   dev:
#     image: thegeeksdiary/serverless:latest
#     container_name: serverless
#     volumes:
#       - "./:/app-code"
#       # - "./.editorconfig:/app-code/editorconfig"
#       # - "./.gitignore:/app-code/.gitignore"
#       # - "./bitbucket-pipelines.yml:/app-code/bitbucket-pipelines.yml"
#       # - "./functions.ts:/app-code/functions.ts"
#       # - "./jest.config.js:/app-code/jest.config.js"
#       # - "./package-lock.json:/app-code/package-lock.json"
#       # - "./package.json:/app-code/package.json"
#       # - "./resources.ts:/app-code/resources.ts"
#       # - "./serverless.ts:/app-code/serverless.ts"
#       # - "./tsconfig.json:/app-code/tsconfig.json"
#       # - "./.ssh:/root/.ssh"
#     environment:
#       AWS_CONFIG_FILE: /root/.aws/config
#       AWS_SHARED_CREDENTIALS_FILE: /root/.aws/credentials
#       EDGE_PORT: 4566
#       LOCALSTACK_HOSTNAME: localstack
#     depends_on:
#       - localstack
#     command: /bin/bash
#     stdin_open: true
#     tty: true
#     # network_mode: "host"
#     networks:
#       - development
#   localstack:
#     image: thegeeksdiary/localstack-dev:latest
#     container_name: localstack
#     ports:
#       # - "53:53"
#       - "443:443"
#       - "4566-4620:4566-4620"
#       - "4510-4559:4510-4559"
#       - "8080:8080"
#     environment:
#       SERVICES: "serverless,cognito,rds,sqs,sns,cloudformation,opensearchserverless,opensearch,dynamodb,apigateway,apigatewayv2,lambda"
#       LOCALSTACK_HOSTNAME: localstack
#       HOSTNAME: localstack
#       HOSTNAME_EXTERNAL: localstack
#       PERSISTENCE: 1
#       DEBUG: 1
#       PORT_WEB_UI: 8080
#       START_WEB: 1
#       LAMBDA_EXECUTOR: docker
#       LAMBDA_REMOVE_CONTAINERS: 0
#       PROVIDER_OVERRIDE_LAMBDA: asf
#       DOCKER_HOST: unix://
#       EAGER_SERVICE_LOADING: 1
#       LAMBDA_DOCKER_NETWORK: development
#     volumes:
#       - "/var/run/docker.sock:/var/run/docker.sock"
#     # network_mode: "host"
#     networks:
#       - development
# networks:
#   development:


version: '3.1'

services:
  localstack:
    image: localstack/localstack:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=lambda,s3,cloudformation,sts,dynamodb,apigateway
      - DEFAULT_REGION=us-east-1
      - LOCALSTACK_HOSTNAME="localhost"
      - HOSTNAME_EXTERNAL="localstack"
    ports:
      - '4566-4597:4566-4597'
    volumes:
      - "${TEMPDIR:-/tmp/localstack}:/temp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
