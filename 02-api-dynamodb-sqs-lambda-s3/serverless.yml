service: job-executor-demo
frameworkVersion: '3'
plugins:
  - serverless-localstack
custom:
  localstack:
    debug: true
    stages:
     - local
     - dev
provider:
  name: aws
  runtime: nodejs12.x
  stackName: job-executor-demo
  environment:
    DYNAMODB_TABLE: ${self:service}-${sls:stage}
    S3_BUCKET: ${self:service}-${sls:stage}-results
    SQS_NAME: ${self:service}-${sls:stage}-jobs
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource:
            - Fn::GetAtt: [ receiverQueue, Arn ]
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource:
            - 'arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*'
functions:
  createJob:
    handler: jobs/create.create
    events:
      - http:
          path: /jobs
          method: post
          cors: true
  listJobs:
    handler: jobs/list.list
    events:
      - http:
          path: /jobs
          method: get
          cors: true
  executeJob:
    handler: results/execute.execute
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - receiverQueue
              - Arn
resources:
  Resources:
    receiverQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.environment.SQS_NAME}
    jobsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
